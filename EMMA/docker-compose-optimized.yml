version: '3.8'

services:
  # Redis for message queuing and data sharing
  redis:
    image: redis:7-alpine
    container_name: emma-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - emma-net
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  # CAP Alert Generator
  cap-generator:
    build:
      context: ./cap-generator
      dockerfile: Dockerfile
    container_name: emma-cap-generator
    volumes:
      - shared-alerts:/app/alerts
      - shared-media:/app/media
      - ./cap-generator:/app/src
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OUTPUT_DIR=/app/alerts
      - MEDIA_DIR=/app/media
    networks:
      - emma-net
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python3", "-c", "import redis; redis.Redis(host='redis').ping()"]
      interval: 60s
      timeout: 10s
      retries: 2
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  # NS-3 Network Simulator
  ns3-sim:
    build:
      context: ./ns3-sim
      dockerfile: Dockerfile
    container_name: emma-ns3-simulator
    privileged: true
    volumes:
      - shared-alerts:/app/input
      - ./ns3-sim:/app/src
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - emma-net
    depends_on:
      redis:
        condition: service_healthy
      cap-generator:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M

  # HTTP CDN Server
  http-cdn:
    build:
      context: ./http-cdn
      dockerfile: Dockerfile
    container_name: emma-http-cdn
    ports:
      - "3000:3000"
    volumes:
      - shared-media:/app/alerts
      - ./http-cdn:/app/src
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - emma-net
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 60s
      timeout: 10s
      retries: 2
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Alert Distribution Service
  alert-distributor:
    build:
      context: ./alert-distributor
      dockerfile: Dockerfile
    container_name: emma-alert-distributor
    ports:
      - "8080:8080"
      - "3001:3001"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - HTTP_CDN_URL=http://http-cdn:3000
    networks:
      - emma-net
    depends_on:
      redis:
        condition: service_healthy
      http-cdn:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  # UE Emulator (disabled by default for resource optimization)
  # ue-emulator:
  #   build:
  #     context: ./ue-emulator
  #     dockerfile: Dockerfile
  #   container_name: emma-ue-emulator
  #   privileged: true
  #   ports:
  #     - "5554:5554"
  #     - "5555:5555"
  #   environment:
  #     - ALERT_DISTRIBUTOR_URL=ws://alert-distributor:8080
  #     - HTTP_CDN_URL=http://http-cdn:3000
  #   networks:
  #     - emma-net
  #   depends_on:
  #     alert-distributor:
  #       condition: service_started
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.8'
  #         memory: 512M
  #       reservations:
  #         cpus: '0.2'
  #         memory: 256M

  # Monitoring Dashboard
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: emma-dashboard
    ports:
      - "3002:3002"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - emma-net
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

networks:
  emma-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
  shared-alerts:
  shared-media: